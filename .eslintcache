[{"D:\\workspace\\dashboard\\src\\index.js":"1","D:\\workspace\\dashboard\\src\\serviceWorker.js":"2","D:\\workspace\\dashboard\\src\\components\\App.js":"3","D:\\workspace\\dashboard\\src\\context\\LayoutContext.js":"4","D:\\workspace\\dashboard\\src\\context\\UserContext.js":"5","D:\\workspace\\dashboard\\src\\themes\\index.js":"6","D:\\workspace\\dashboard\\src\\components\\Layout\\Layout.js":"7","D:\\workspace\\dashboard\\src\\themes\\default.js":"8","D:\\workspace\\dashboard\\src\\pages\\login\\Login.js":"9","D:\\workspace\\dashboard\\src\\pages\\error\\Error.js":"10","D:\\workspace\\dashboard\\src\\pages\\charts\\Charts.js":"11","D:\\workspace\\dashboard\\src\\pages\\icons\\Icons.js":"12","D:\\workspace\\dashboard\\src\\pages\\tables\\Tables.js":"13","D:\\workspace\\dashboard\\src\\pages\\dashboard\\mock.js":"14","D:\\workspace\\dashboard\\src\\pages\\dashboard\\components\\Table\\Table.js":"15","D:\\workspace\\dashboard\\src\\components\\Widget\\Widget.js":"16","D:\\workspace\\dashboard\\src\\components\\PageTitle\\PageTitle.js":"17","D:\\workspace\\dashboard\\src\\pages\\dashboard\\styles.js":"18","D:\\workspace\\dashboard\\src\\pages\\icons\\styles.js":"19","D:\\workspace\\dashboard\\src\\pages\\charts\\components\\ApexHeatmap.js":"20","D:\\workspace\\dashboard\\src\\pages\\charts\\components\\ApexLineChart.js":"21","D:\\workspace\\dashboard\\src\\components\\PageTitle\\styles.js":"22","D:\\workspace\\dashboard\\src\\components\\Widget\\styles.js":"23","D:\\workspace\\dashboard\\src\\components\\Wrappers\\Wrappers.js":"24","D:\\workspace\\dashboard\\src\\pages\\error\\styles.js":"25","D:\\workspace\\dashboard\\src\\pages\\login\\styles.js":"26","D:\\workspace\\dashboard\\src\\components\\Layout\\styles.js":"27","D:\\workspace\\dashboard\\src\\pages\\dashboard\\Dashboard.js":"28","D:\\workspace\\dashboard\\src\\pages\\maps\\Maps.js":"29","D:\\workspace\\dashboard\\src\\pages\\notifications\\Notifications.js":"30","D:\\workspace\\dashboard\\src\\pages\\typography\\Typography.js":"31","D:\\workspace\\dashboard\\src\\pages\\house\\House.js":"32","D:\\workspace\\dashboard\\src\\components\\Sidebar\\Sidebar.js":"33","D:\\workspace\\dashboard\\src\\components\\Header\\Header.js":"34","D:\\workspace\\dashboard\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"35","D:\\workspace\\dashboard\\src\\components\\Sidebar\\components\\Dot.js":"36","D:\\workspace\\dashboard\\src\\pages\\maps\\styles.js":"37","D:\\workspace\\dashboard\\src\\pages\\notifications\\styles.js":"38","D:\\workspace\\dashboard\\src\\pages\\typography\\styles.js":"39","D:\\workspace\\dashboard\\src\\context\\HouseKeeperContext.js":"40","D:\\workspace\\dashboard\\src\\components\\Header\\styles.js":"41","D:\\workspace\\dashboard\\src\\components\\Sidebar\\styles.js":"42","D:\\workspace\\dashboard\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"43","D:\\workspace\\dashboard\\src\\components\\Notification\\Notification.js":"44","D:\\workspace\\dashboard\\src\\components\\UserAvatar\\UserAvatar.js":"45","D:\\workspace\\dashboard\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"46","D:\\workspace\\dashboard\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"47","D:\\workspace\\dashboard\\src\\components\\Notification\\styles.js":"48","D:\\workspace\\dashboard\\src\\components\\UserAvatar\\styles.js":"49"},{"size":896,"mtime":1631000222029,"results":"50","hashOfConfig":"51"},{"size":5083,"mtime":1631000222045,"results":"52","hashOfConfig":"51"},{"size":1809,"mtime":1631060549960,"results":"53","hashOfConfig":"51"},{"size":1444,"mtime":1631000222029,"results":"54","hashOfConfig":"51"},{"size":3865,"mtime":1631060549962,"results":"55","hashOfConfig":"51"},{"size":534,"mtime":1631000222045,"results":"56","hashOfConfig":"51"},{"size":4680,"mtime":1631060549961,"results":"57","hashOfConfig":"51"},{"size":3127,"mtime":1631000222045,"results":"58","hashOfConfig":"51"},{"size":8888,"mtime":1631060549965,"results":"59","hashOfConfig":"51"},{"size":1626,"mtime":1631000222029,"results":"60","hashOfConfig":"51"},{"size":5790,"mtime":1631000222029,"results":"61","hashOfConfig":"51"},{"size":391433,"mtime":1631000222029,"results":"62","hashOfConfig":"51"},{"size":2146,"mtime":1631000222045,"results":"63","hashOfConfig":"51"},{"size":4288,"mtime":1631000222029,"results":"64","hashOfConfig":"51"},{"size":1323,"mtime":1631000222029,"results":"65","hashOfConfig":"51"},{"size":2581,"mtime":1631000222029,"results":"66","hashOfConfig":"51"},{"size":447,"mtime":1631000222014,"results":"67","hashOfConfig":"51"},{"size":3000,"mtime":1631000222029,"results":"68","hashOfConfig":"51"},{"size":812,"mtime":1631000222029,"results":"69","hashOfConfig":"51"},{"size":1909,"mtime":1631000222029,"results":"70","hashOfConfig":"51"},{"size":1396,"mtime":1631000222029,"results":"71","hashOfConfig":"51"},{"size":482,"mtime":1631000222029,"results":"72","hashOfConfig":"51"},{"size":1015,"mtime":1631000222029,"results":"73","hashOfConfig":"51"},{"size":3971,"mtime":1631000222029,"results":"74","hashOfConfig":"51"},{"size":1395,"mtime":1631000222029,"results":"75","hashOfConfig":"51"},{"size":3281,"mtime":1631000222029,"results":"76","hashOfConfig":"51"},{"size":710,"mtime":1631000222014,"results":"77","hashOfConfig":"51"},{"size":16129,"mtime":1631060549963,"results":"78","hashOfConfig":"51"},{"size":1010,"mtime":1631000222029,"results":"79","hashOfConfig":"51"},{"size":13862,"mtime":1631000222045,"results":"80","hashOfConfig":"51"},{"size":4632,"mtime":1631000222045,"results":"81","hashOfConfig":"51"},{"size":2410,"mtime":1631082908438,"results":"82","hashOfConfig":"51"},{"size":4394,"mtime":1631060549961,"results":"83","hashOfConfig":"51"},{"size":10229,"mtime":1631004164965,"results":"84","hashOfConfig":"51"},{"size":4160,"mtime":1631000222029,"results":"85","hashOfConfig":"51"},{"size":902,"mtime":1631000222029,"results":"86","hashOfConfig":"51"},{"size":178,"mtime":1631000222029,"results":"87","hashOfConfig":"51"},{"size":1943,"mtime":1631000222045,"results":"88","hashOfConfig":"51"},{"size":389,"mtime":1631000222045,"results":"89","hashOfConfig":"51"},{"size":605,"mtime":1631082893295,"results":"90","hashOfConfig":"51"},{"size":4043,"mtime":1631000222014,"results":"91","hashOfConfig":"51"},{"size":1363,"mtime":1631000222029,"results":"92","hashOfConfig":"51"},{"size":4589,"mtime":1631000222029,"results":"93","hashOfConfig":"51"},{"size":3413,"mtime":1631000222014,"results":"94","hashOfConfig":"51"},{"size":620,"mtime":1631000222029,"results":"95","hashOfConfig":"51"},{"size":1075,"mtime":1631000222029,"results":"96","hashOfConfig":"51"},{"size":1474,"mtime":1631000222029,"results":"97","hashOfConfig":"51"},{"size":1040,"mtime":1631000222014,"results":"98","hashOfConfig":"51"},{"size":291,"mtime":1631000222029,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7f8eyt",{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\dashboard\\src\\index.js",[],"D:\\workspace\\dashboard\\src\\serviceWorker.js",[],"D:\\workspace\\dashboard\\src\\components\\App.js",["203"],"import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\n\r\nexport default function App() {\r\n  // global\r\n  var { isAuthenticated, accessToken } = useUserState();\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","D:\\workspace\\dashboard\\src\\context\\LayoutContext.js",[],"D:\\workspace\\dashboard\\src\\context\\UserContext.js",[],"D:\\workspace\\dashboard\\src\\themes\\index.js",[],"D:\\workspace\\dashboard\\src\\components\\Layout\\Layout.js",[],"D:\\workspace\\dashboard\\src\\themes\\default.js",[],"D:\\workspace\\dashboard\\src\\pages\\login\\Login.js",["204","205"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser, joinUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [errorMessage, setErrorMessage] = useState(\"회원 정보를 찾을 수 없습니다. 다시 시도해주세요.\");\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>HouseKeeper</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"로그인\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"회원가입\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              {/* <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div> */}\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  {errorMessage}\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"이메일\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                        setErrorMessage,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    로그인\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  비밀번호 찾기\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  {errorMessage}\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"이름\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"이메일\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"비밀번호\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      joinUser(\r\n                        nameValue,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        setActiveTabId,\r\n                        setIsLoading,\r\n                        setError,\r\n                        setErrorMessage,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    회원가입\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              {/* <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div> */}\r\n              {/* <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\workspace\\dashboard\\src\\pages\\error\\Error.js",[],"D:\\workspace\\dashboard\\src\\pages\\charts\\Charts.js",[],"D:\\workspace\\dashboard\\src\\pages\\icons\\Icons.js",[],"D:\\workspace\\dashboard\\src\\pages\\tables\\Tables.js",[],"D:\\workspace\\dashboard\\src\\pages\\dashboard\\mock.js",[],"D:\\workspace\\dashboard\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\workspace\\dashboard\\src\\components\\Widget\\Widget.js",[],"D:\\workspace\\dashboard\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\workspace\\dashboard\\src\\pages\\dashboard\\styles.js",[],"D:\\workspace\\dashboard\\src\\pages\\icons\\styles.js",[],"D:\\workspace\\dashboard\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\workspace\\dashboard\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\workspace\\dashboard\\src\\components\\PageTitle\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Widget\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\workspace\\dashboard\\src\\pages\\error\\styles.js",[],"D:\\workspace\\dashboard\\src\\pages\\login\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Layout\\styles.js",[],"D:\\workspace\\dashboard\\src\\pages\\dashboard\\Dashboard.js",[],"D:\\workspace\\dashboard\\src\\pages\\maps\\Maps.js",[],"D:\\workspace\\dashboard\\src\\pages\\notifications\\Notifications.js",[],"D:\\workspace\\dashboard\\src\\pages\\typography\\Typography.js",[],"D:\\workspace\\dashboard\\src\\pages\\house\\House.js",["206"],"import React, { useState } from \"react\";\r\nimport { getHouseList } from '../../context/HouseKeeperContext';\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst datatableData = [\r\n  [\"Joe James\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tableOverflow: {\r\n      overflow: 'auto'\r\n    }\r\n  }))\r\n  \r\nexport default function House() {\r\n\r\n    var houses = getHouseList();\r\n    console.log(houses);\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <PageTitle title=\"하우스\" />\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <MUIDataTable\r\n                title=\"하우스 리스트\"\r\n                data={datatableData}\r\n                columns={[\"하우스 이름\", \"등록날짜\", \"수정날짜\", \"수정\"]}\r\n                options={{\r\n                    filterType: \"checkbox\",\r\n                }}\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                <Table data={mock.table} />\r\n            </Widget>\r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    );\r\n}","D:\\workspace\\dashboard\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\workspace\\dashboard\\src\\components\\Header\\Header.js",["207","208"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Housekeeper\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\workspace\\dashboard\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\workspace\\dashboard\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\workspace\\dashboard\\src\\pages\\maps\\styles.js",[],"D:\\workspace\\dashboard\\src\\pages\\notifications\\styles.js",[],"D:\\workspace\\dashboard\\src\\pages\\typography\\styles.js",[],"D:\\workspace\\dashboard\\src\\context\\HouseKeeperContext.js",["209"],"import React from \"react\";\r\nimport axios from 'axios';\r\n\r\n// API 정보\r\nconst PATH_HOUSE = '/house';\r\nconst PATH_HOUSE_LIST = PATH_HOUSE + '/list';\r\n\r\n// 기본 API 통신 axios 객체\r\nconst apiClient = axios.create({\r\n    baseURL: '/api',\r\n    timeout: 180000,\r\n    withCredentials: false,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-AUTH-TOKEN\": localStorage.getItem('accessToken')\r\n    }\r\n});\r\n\r\n// 하우스 리스트 조회\r\nasync function getHouseList() {\r\n    let response = await apiClient.get(PATH_HOUSE_LIST);\r\n\r\n    return response;\r\n}\r\n\r\nexport { getHouseList };","D:\\workspace\\dashboard\\src\\components\\Header\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Sidebar\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\workspace\\dashboard\\src\\components\\Notification\\Notification.js",[],"D:\\workspace\\dashboard\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\workspace\\dashboard\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\Notification\\styles.js",[],"D:\\workspace\\dashboard\\src\\components\\UserAvatar\\styles.js",[],{"ruleId":"210","severity":1,"message":"211","line":16,"column":26,"nodeType":"212","messageId":"213","endLine":16,"endColumn":37},{"ruleId":"210","severity":1,"message":"214","line":13,"column":8,"nodeType":"212","messageId":"213","endLine":13,"endColumn":18},{"ruleId":"210","severity":1,"message":"215","line":20,"column":8,"nodeType":"212","messageId":"213","endLine":20,"endColumn":14},{"ruleId":"210","severity":1,"message":"216","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},{"ruleId":"210","severity":1,"message":"217","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":7},{"ruleId":"210","severity":1,"message":"218","line":27,"column":29,"nodeType":"212","messageId":"213","endLine":27,"endColumn":35},{"ruleId":"210","severity":1,"message":"219","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},"no-unused-vars","'accessToken' is assigned a value but never used.","Identifier","unusedVar","'classnames' is defined but never used.","'google' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'React' is defined but never used."]